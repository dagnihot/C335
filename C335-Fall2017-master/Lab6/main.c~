//Partners: Sander Altman and Ziyad Kraft

//main.c for lab6
#include <f3d_uart.h>
#include <stdio.h>
#include <stdlib.h>
#include <f3d_gyro.h>
#include <f3d_led.h>
#include <f3d_user_btn.h>

// Simple looping delay function
void delay(int delayAmount) {
  while (delayAmount-- > 0) {
    asm("nop"); /* This stops it optimising code out */
  }
}

//Gets appropriate led index for the given value
int get_led(float value) {
  int led = 0;
  int divisor = 10;
  while ((int) (value / divisor) != 0) {
    led++;
    if (abs(led) == 4) break;
    divisor *= 2;
  }
  //-10 < value < 10:                       led = 0
  //-20 < value <= 10 or 10 <= value < 20:  led = 1
  //-40 < value <= -20 or 20 <= value < 40: led = 2
  //-80 < value <= -40 or 40 <= value < 80: led = 3
  // value <= -80 or 80 <= value :          led = 4
  //
  // (these are not final values)

  //Differentiates between positive and negative, and centralizes it around 1 instead of 0 (since 1 is the index of the north led)
  led = 1 - (led * (value < 0 ? -1 : 1));

  //Converts negative led indices to positive ones
  if (led < 0) led += 8;
 
  return led;
}

int main(void){
  f3d_uart_init();
  f3d_led_init();
  f3d_user_btn_init();
  f3d_gyro_init();

  float data[3];
  char axisLabels[] = { 'x', 'y', 'z' };
  int x = 0, y = 1, z = 2;
  int axis = x;
  int led = -1;

  while(1) {
    //Collect data
    f3d_gyro_getdata(data);

    //Print new data
    printf("%c: %+f\n",axisLabels[axis],data[axis]);
   
    //Change lights if necessary
    int newLed = get_led(data[axis]);
    if (newLed != led) {
      f3d_led_all_off();
      f3d_led_on(led = newLed);
    }

    char c = USART_ReceiveData(USART1);
    if (axisLabels[axis] != 'x' && c == 'x') {
      axis = 0;
    } else if (axisLabels[axis] != 'y' && c == 'y') {
      axis = 1;
    } else if (axisLabels[axis] != 'z' && c == 'z') {
      axis = 2;
    } else if (user_btn_read()) {
      axis++;
      if (axis > z) axis = x;
      c = 1;
    } else {
      c = 0;
    }

    if (c != 0) {
      delay(3000000);
      printf("\nSwitching to %c axis\n\n",axisLabels[axis]);
      delay(3000000);
    }

    //Delay so that we do not get an overwhelming stream of data
    delay(1000000);
  }
}

void assert_failed(uint8_t* file, uint32_t line) {
/* Infinite loop */
/* Use GDB to find out why we're here */
  while (1);
}
